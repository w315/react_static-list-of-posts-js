{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","username","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"0z8IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCbMG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACJ,IAApBA,EAASC,OACR,oBAAIJ,UAAU,cAAd,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,SAIhD,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,kCCdOC,EAAW,SAAC,GAAD,QAAGC,KAAQX,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAOW,EAAxB,EAAwBA,SAAxB,OACtB,mBAAGT,UAAU,WAAWC,KAAI,iBAAYH,GAAS,sBAAjD,SACGD,GAASY,GAAY,uBCEbC,G,MAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOJ,EAAlB,EAAkBA,KAAMT,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,qBAAIH,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,IAEjC,8BACG,eAEAJ,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAK7B,mBAAGR,UAAU,iBAAb,SACGD,IAGH,cAAC,EAAD,CAAaI,SAAUA,SCnBdU,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAId,UAAU,WAAd,SACGc,EAAMT,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,UCU/B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAM,GAAI,kCACxCA,GADwC,IAE3CH,MAVmBQ,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAUhDb,UAP2BgB,EAOGR,EAAKL,GAN5Bc,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,QADjE,IAA6BA,EAJRH,KAcRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b728340.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <li className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </li>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  (comments.length !== 0) ? (\n    <ul className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </ul>\n  ) : (\n    <>\n      <hr />\n\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    </>\n  )\n);\n","export const UserInfo = ({ user: { name, email, username } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email || 'email unidentified'}`}>\n    {name || (username || 'name unidentified')}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && <UserInfo user={user} />}\n\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <CommentList comments={comments} />\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}